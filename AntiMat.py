__version__ = (1, 3, 0)
#                _             __  __           _       _
#      /\       | |           |  \/  |         | |     | |
#     /  \   ___| |_ _ __ ___ | \  / | ___   __| |_   _| | ___  ___
#    / /\ \ / __| __| '__/ _ \| |\/| |/ _ \ / _` | | | | |/ _ \/ __|
#   / ____ \\__ \ |_| | | (_) | |  | | (_) | (_| | |_| | |  __/\__ \
#  /_/    \_\___/\__|_|  \___/|_|  |_|\___/ \__,_|\__,_|_|\___||___/
#
#                         ¬© Copyright 2022
#
#                https://t.me/Den4ikSuperOstryyPer4ik
#                              and
#                      https://t.me/ToXicUse
#
#                 üîí Licensed under the GNU AGPLv3
#             https://www.gnu.org/licenses/agpl-3.0.html
#
# meta developer: @AstroModules
from .. import loader, utils
from telethon.tl.types import Message


class AntiMatMod(loader.Module):
    '''–ë—É–¥—å—Ç–µ –∫—É–ª—å—Ç—É—Ä–Ω—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º, –Ω–µ –º–∞—Ç–µ—Ä–∏—Ç–µ—Å—å'''

    strings = {
        "name": "–ê–Ω—Ç–∏-–ú–∞—Ç",
        "am_on": "ü§¨ <b>–ê–Ω—Ç–∏–º–∞—Ç –≤–∫–ª—é—á–µ–Ω.</b>",
        "am_off": "ü§¨ <b>–ê–Ω—Ç–∏–º–∞—Ç –æ—Ç–∫–ª—é—á–µ–Ω.</b>",
        "action_text": "–ö–∞–∫–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å –ø—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ –º–∞—Ç–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏?",
        "list_txt": "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–∏ –º–∞—Ç—ã.\np.s.: –¥–æ–±–∞–≤–ª—è–π—Ç–µ –ø–æ –æ–¥–Ω–æ–º—É –º–∞—Ç—É",
        "added": "<b><emoji document_id=5030749344752468962>‚ûï</emoji> –ß–∞—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞–Ω—Ç–∏–º–∞—Ç —Å–∏—Å—Ç–µ–º—É</b>",
        "uadded": "<b><emoji document_id=5033287275287413303>üóë</emoji> –ß–∞—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ —Å–∏—Å—Ç–µ–º—ã –∞–Ω—Ç–∏–º–∞—Ç</b>",
    }

    async def client_ready(self):
        self.chats = self.get("active", [])

    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "list",
                "—Ö–µ—Ä, —Ö—Ä–µ–Ω, —Ö—É–π, –ø–∏–∑–¥–∞, –±–ª—è, –ø–æ—Ö, –µ–±–ª–∞–Ω, –µ–±–∞, —à–ª—é—Ö–∞, —Å—É–∫–∞, —É–µ–±–∞–Ω, –ø–∑–¥—Ü, –ø–∏–∑–¥–µ—Ü, –ø–∏–∑–¥–æ—Å, —Ö—É—é, –¥–æ–ª–±–æ–µ–±, –ø–∏–¥–æ—Ä, –≥–∞–Ω–¥–æ–Ω, —Ö—É—è",
                doc=lambda: self.strings("list_txt"),
                validator=loader.validators.Series()
            ),
        )

    @loader.command()
    async def antimat(self, message: Message):
        '''- –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –¥–∏–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ê–Ω—Ç–∏–ú–∞—Ç'''
        antimat = self.db.get(
            "am_status",
            "antimat",
        )
        if antimat == "":
            self.db.set("am_status", "antimat", False)
        if antimat == False:
            self.db.set("am_status", "antimat", True)
            await utils.answer(message, self.strings("am_on"))
        else:
            self.db.set("am_status", "antimat", False)
            await utils.answer(message, self.strings("am_off"))

    @loader.command()
    async def matlist(self, message: Message):
        """- –æ—Ç–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫ –º–∞—Ç–æ–≤"""
        await self.allmodules.commands["config"](
            await utils.answer(message, f"{self.get_prefix()}config –ê–Ω—Ç–∏-–ú–∞—Ç")
        )

    @loader.command()
    async def amaddcmd(self, message: Message):
        """- –∑–∞–ø—Ä–µ—Ç–∏—Ç—å —á–∞—Ç—É –≤—ã—Ä–∞–∂–∞—Ç—å—Å—è —Ü–µ–Ω–∑—É—Ä–æ–π"""
        amc = str(utils.get_chat_id(message))

        if amc in self.chats:
            self.chats.remove(amc)
            await utils.answer(message, self.strings("uadded"))
        else:
            self.chats += [amc]
            await utils.answer(message, self.strings("added"))

        self.set("active", self.chats)

    @loader.watcher()
    async def watcher(self, message: Message):
        cid = str(utils.get_chat_id(message))

        txt = message.text
        antimat = self.db.get(
            "am_status",
            "antimat",
        )
        mats = self.config['list']

        if antimat == False:
            return
        if antimat == True:
            if cid not in self.chats:
                for mat in mats:
                    m = txt.lower().find(mat)
                    if m != -1:
                        await message.edit("<emoji document_id=5213285132709929474>ü§¨</emoji> <b>–ù–µ –º–∞—Ç–µ—Ä–∏—Å—å!</b>")
            else:
                for mat in mats:
                    m = txt.lower().find(mat)
                    if m != -1:
                        await utils.answer(message, "<emoji document_id=5213285132709929474>ü§¨</emoji> <b>–ù–µ –º–∞—Ç–µ—Ä–∏—Å—å!</b>")
