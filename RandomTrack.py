__version__ = (1, 4, 2)
#                _             __  __           _       _                
#      /\       | |           |  \/  |         | |     | |               
#     /  \   ___| |_ _ __ ___ | \  / | ___   __| |_   _| | ___  ___      
#    / /\ \ / __| __| '__/ _ \| |\/| |/ _ \ / _` | | | | |/ _ \/ __|     
#   / ____ \\__ \ |_| | | (_) | |  | | (_) | (_| | |_| | |  __/\__ \     
#  /_/    \_\___/\__|_|  \___/|_|  |_|\___/ \__,_|\__,_|_|\___||___/     
#                                                                        
#                         ¬© Copyright 2022                               
#                                                                        
#                https://t.me/Den4ikSuperOstryyPer4ik                    
#                              and                                       
#                      https://t.me/ToXicUse                             
#                                                                         
#                 üîí Licensed under the GNU AGPLv3                       
#             https://www.gnu.org/licenses/agpl-3.0.html                 
#                                                                                                                 
# meta developer: @AstroModules
from .. import loader, utils

import random
from telethon.tl.types import Message, InputMessagesFilterMusic

@loader.tds
class RandomTrackMod(loader.Module):
	'''–ü–æ–ª—É—á–∏—Ç—å —Ä–∞–Ω–¥–æ–º–Ω—ã–π —Ç—Ä–µ–∫. 
	–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —á—Ç–æ–±—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–µ–∫ –Ω–∞ —Å–≤–æ–π –≤–∫—É—Å'''

	strings = {"name": "RandomTrack"}
  
	def __init__(self):
		self.config = loader.ModuleConfig(
			loader.ConfigValue(
				"playlist",
				None,
				doc=lambda: "–í–≤–µ–¥–∏—Ç–µ —é–∑–µ—Ä —Å–≤–æ–µ–≥–æ –∫–∞–Ω–∞–ª–∞ —Å –º—É–∑—ã–∫–æ–π",
			),
			loader.ConfigValue(
				"fonks",
				"AM_fonks",
				doc=lambda: "–í–≤–µ–¥–∏—Ç–µ —é–∑–µ—Ä —Å–≤–æ–µ–≥–æ –∫–∞–Ω–∞–ª–∞ —Å —Ñ–æ–Ω–∫–∞–º–∏",
			),
			loader.ConfigValue(
				"remixes",
				"AM_rmx",
				doc=lambda: "–í–≤–µ–¥–∏—Ç–µ —é–∑–µ—Ä —Å–≤–æ–µ–≥–æ –∫–∞–Ω–∞–ª–∞ —Å —Ä–µ–º–∏–∫—Å–∞–º–∏",
			),
			loader.ConfigValue(
				"sad",
				"AM_depressive",
				doc=lambda: "–í–≤–µ–¥–∏—Ç–µ —é–∑–µ—Ä —Å–≤–æ–µ–≥–æ –∫–∞–Ω–∞–ª–∞ —Å –≥—Ä—É—Å—Ç–Ω–æ–π –º—É–∑—ã–∫–æ–π",
			),
			loader.ConfigValue(
				"popular",
				"AM_popular",
				doc=lambda: "–í–≤–µ–¥–∏—Ç–µ —é–∑–µ—Ä —Å–≤–æ–µ–≥–æ –∫–∞–Ω–∞–ª–∞ —Å –ø–æ–ø –º—É–∑—ã–∫–æ–π",
			),
			loader.ConfigValue(
				"hyperpop",
				"hyperpopmusicx_x",
				doc=lambda: "–í–≤–µ–¥–∏—Ç–µ —é–∑–µ—Ä —Å–≤–æ–µ–≥–æ –∫–∞–Ω–∞–ª–∞ —Å —Ö–∞–π–ø–µ—Ä–ø–æ–ø –º—É–∑—ã–∫–æ–π",
			),
			loader.ConfigValue(
				"mems",
				"AM_memss",
				doc=lambda: "–í–≤–µ–¥–∏—Ç–µ —é–∑–µ—Ä —Å–≤–æ–µ–≥–æ –∫–∞–Ω–∞–ª–∞ —Å –º–µ–º–∞–º–∏",
			)
		)

	@loader.command()
	async def rt(self, message: Message):
		"""- —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–µ–∫.

		ü´† –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:
		  <f> - —Ñ–æ–Ω–∫–∏
		  <r> - —Ä–µ–º–∏–∫—Å—ã
		  <m> - –º–µ–º–Ω—ã–µ –∑–≤—É–∫–∏
		  <s> - –≥—Ä—É—Å—Ç–Ω–∞—è –º—É–∑—ã–∫–∞
		  <h> - —Ö–∞–π–ø–µ—Ä–ø–æ–ø –º—É–∑—ã–∫–∞
		  <p> - –ø–æ–ø—É–ª—è—Ä–Ω–∞—è –º—É–∑—ã–∫–∞
		  <n> - –Ω–æ—Å—Ç–∞–ª—å–≥–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–∫–∏
		  <my> - —Ç—Ä–µ–∫–∏ –∏–∑ –≤–∞—à–µ–≥–æ –ø–ª–µ–π–ª–∏—Å—Ç–∞

		ü§´ –ü–æ –∂–µ–ª–∞–Ω–∏—é, –≤ –∫–æ–Ω—Ñ–∏–≥–µ, –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —Å–≤–æ–∏ –∫–∞–Ω–∞–ª—ã –æ—Ç–∫—É–¥–∞ –±—É–¥–µ—Ç –æ—Ç–±–∏—Ä–∞—Ç—å—Å—è –º—É–∑—ã–∫–∞"""

		args = utils.get_args_raw(message)                  
		afonks = self.config['fonks']           
		asad = self.config['sad']               
		ahpop = self.config['hyperpop']         
		armx = self.config['remixes']            
		apop = self.config['popular']
		amems = self.config['mems']             
		aplaylist = self.config['playlist']
		agroup = "shyshomuz"
		nstt = 'AM_NSTL'

		if not args:
			await utils.answer(message, "<emoji document_id=5219806684066618617>ü´†</emoji> <b>–ü–æ–¥–±–∏—Ä–∞–µ–º —Ç—Ä–µ–∫...</b>")
			music = random.choice([msg async for msg in self.client.iter_messages(agroup, limit=1000, filter=InputMessagesFilterMusic, reply_to=utils.get_topic(message))])
			await message.respond(file=music)
			if message.out:
				await message.delete()

		if args == "f":
			await utils.answer(message, "<emoji document_id=5219806684066618617>ü´†</emoji> <b>–ü–æ–¥–±–∏—Ä–∞–µ–º —Ñ–æ–Ω–∫...</b>")
			fonk = random.choice([msg async for msg in self.client.iter_messages(afonks, limit=100, filter=InputMessagesFilterMusic, reply_to=utils.get_topic(message))])
			await message.respond(file=fonk)
			if message.out:
				await message.delete()

		if args == "s":
			await utils.answer(message, "<emoji document_id=5219806684066618617>ü´†</emoji> <b>–ü–æ–¥–±–∏—Ä–∞–µ–º –≥—Ä—É—Å—Ç–Ω—ã–π —Ç—Ä–µ–∫...</b>")
			depr = random.choice([msg async for msg in self.client.iter_messages(asad, limit=100, filter=InputMessagesFilterMusic, reply_to=utils.get_topic(message))])
			await message.respond(file=depr)
			if message.out:
				await message.delete()

		if args == "h":
			await utils.answer(message, "<emoji document_id=5219806684066618617>ü´†</emoji> <b>–ü–æ–¥–±–∏—Ä–∞–µ–º —Ö–∞–π–ø–µ—Ä–ø–æ–ø...</b>")
			hyper = random.choice([msg async for msg in self.client.iter_messages(ahpop, limit=100, filter=InputMessagesFilterMusic, reply_to=utils.get_topic(message))])
			await message.respond(file=hyper)
			if message.out:
				await message.delete()

		if args == "r":
			await utils.answer(message, "<emoji document_id=5219806684066618617>ü´†</emoji> <b>–ü–æ–¥–±–∏—Ä–∞–µ–º —Ä–µ–º–∏–∫—Å...</b>")
			remix = random.choice([msg async for msg in self.client.iter_messages(armx, limit=100, filter=InputMessagesFilterMusic, reply_to=utils.get_topic(message))])
			await message.respond(file=remix)
			if message.out:
				await message.delete()

		if args == "m":
			await utils.answer(message, "<emoji document_id=5219806684066618617>ü´†</emoji> <b>–ü–æ–¥–±–∏—Ä–∞–µ–º —Ç—Ä–µ–∫...</b>")
			mem = random.choice(await self.client.get_messages(amems, limit=100, reply_to=utils.get_topic(message)))
			await message.respond(file=mem)
			if message.out:
				await message.delete()

		if args == "p":
			await utils.answer(message, "<emoji document_id=5219806684066618617>ü´†</emoji> <b>–ü–æ–¥–±–∏—Ä–∞–µ–º —Ç—Ä–µ–∫...</b>")
			pop = random.choice([msg async for msg in self.client.iter_messages(apop, limit=100, filter=InputMessagesFilterMusic, reply_to=utils.get_topic(message))])
			await message.respond(file=pop)
			if message.out:
				await message.delete()
				
		if args == "n":
			await utils.answer(message, "<emoji document_id=5219806684066618617>ü´†</emoji> <b>–ü–æ–¥–±–∏—Ä–∞–µ–º —Ç—Ä–µ–∫...</b>")
			nst = random.choice([msg async for msg in self.client.iter_messages(nstt, limit=200, filter=InputMessagesFilterMusic, reply_to=utils.get_topic(message))])
			await message.respond(file=nst)
			if message.out:
				await message.delete()

		if args == "my":
			await utils.answer(message, "<emoji document_id=5219806684066618617>ü´†</emoji> <b>–ü–æ–¥–±–∏—Ä–∞–µ–º —Ç—Ä–µ–∫ —Å –≤–∞—à–µ–≥–æ –ø–ª–µ–π–ª–∏—Å—Ç–∞...</b>")
			my = random.choice([msg async for msg in self.client.iter_messages(aplaylist, limit=100, filter=InputMessagesFilterMusic, reply_to=utils.get_topic(message))])
			await message.respond(file=my)
			if message.out:
				await message.delete()
				